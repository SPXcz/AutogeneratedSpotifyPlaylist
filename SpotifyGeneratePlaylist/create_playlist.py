import json
import os
import requests

from SpotifyGeneratePlaylist.exceptions import ResponseException
from SpotifyGeneratePlaylist.secrets import spotify_token, spotify_user_id


class CreatePlaylist:
    def __init__(self):
        self.all_song_info = {}

    def create_playlist(self, playlist_name):
        """Create A New Playlist"""
        request_body = json.dumps({
            "name": playlist_name,
            "description": "Autogenerated playlist by SPXcz's AutogeneratedSpotifyPlaylist Github: https://github.com/SPXcz/AutogeneratedSpotifyPlaylist",
            "public": True
        })

        query = "https://api.spotify.com/v1/users/{}/playlists".format(
            spotify_user_id)
        response = requests.post(
            query,
            data=request_body,
            headers={
                "Content-Type": "application/json",
                "Authorization": "Bearer {}".format(spotify_token)
            }
        )

        # check for valid response status
        if response.status_code != 201:
            raise ResponseException(response.status_code)

        response_json = response.json()

        # playlist id
        return response_json["id"]

    def get_spotify_uri(self, song_name):
        """Search For the Song"""
        query = "https://api.spotify.com/v1/search?q={}&type=track&limit=20&offset=0".format(
            song_name
        )
        response = requests.get(
            query,
            headers={
                "Content-Type": "application/json",
                "Authorization": "Bearer {}".format(spotify_token)
            }
        )

        # check for valid response status
        if response.status_code != 200:
            raise ResponseException(response.status_code)

        response_json = response.json()

        songs = response_json["tracks"]["items"]

        #Checking for existance of a song
        if not songs:
            return None
        
        # only use the first song
        uri = songs[0]["uri"]

        return uri

    def add_song_to_playlist(self, playlist_id):
        """Add all songs into a new Spotify playlist"""

        # collect all of uri
        uris = [info["spotify_uri"]
                for song, info in self.all_song_info.items()]

        # add all songs into new playlist
        request_data = json.dumps(uris)

        query = "https://api.spotify.com/v1/playlists/{}/tracks".format(
            playlist_id)

        response = requests.post(
            query,
            data=request_data,
            headers={
                "Content-Type": "application/json",
                "Authorization": "Bearer {}".format(spotify_token)
            }
        )

        # check for valid response status
        if response.status_code != 201:
            raise ResponseException(response.status_code)

        response_json = response.json()
        return response_json